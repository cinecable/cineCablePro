package pojo.annotations;

// Generated 09/02/2014 10:20:13 AM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Tpagos generated by hbm2java
 */
@Entity
@Table(name = "tpagos", schema = "public")
public class Tpagos implements java.io.Serializable, Cloneable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -8027962167197613409L;
	private int idtpago;
	private Fpago fpago;
	private Bancos bancosByIdbcoemisortar;
	private Pagos pagos;
	private Bancos bancosByIdbcoemisor;
	private float valpago;
	private String nrodocumento;
	private Date fcaducidad;
	private String codseguridad;
	private String propietario;
	private String nrocuenta;
	private int idestado;
	private int idempresa;
	private int idusuario;
	private Integer idnexo;

	public Tpagos() {
	}

	public Tpagos(int idtpago, Fpago fpago, Bancos bancosByIdbcoemisortar,
			Pagos pagos, Bancos bancosByIdbcoemisor, float valpago,
			int idestado, int idempresa, int idusuario) {
		this.idtpago = idtpago;
		this.fpago = fpago;
		this.bancosByIdbcoemisortar = bancosByIdbcoemisortar;
		this.pagos = pagos;
		this.bancosByIdbcoemisor = bancosByIdbcoemisor;
		this.valpago = valpago;
		this.idestado = idestado;
		this.idempresa = idempresa;
		this.idusuario = idusuario;
	}

	public Tpagos(int idtpago, Fpago fpago, Bancos bancosByIdbcoemisortar,
			Pagos pagos, Bancos bancosByIdbcoemisor, float valpago,
			String nrodocumento, Date fcaducidad, String codseguridad,
			String propietario, String nrocuenta, int idestado, int idempresa,
			int idusuario, Integer idnexo) {
		this.idtpago = idtpago;
		this.fpago = fpago;
		this.bancosByIdbcoemisortar = bancosByIdbcoemisortar;
		this.pagos = pagos;
		this.bancosByIdbcoemisor = bancosByIdbcoemisor;
		this.valpago = valpago;
		this.nrodocumento = nrodocumento;
		this.fcaducidad = fcaducidad;
		this.codseguridad = codseguridad;
		this.propietario = propietario;
		this.nrocuenta = nrocuenta;
		this.idestado = idestado;
		this.idempresa = idempresa;
		this.idusuario = idusuario;
		this.idnexo = idnexo;
	}

	@Id
	@Column(name = "idtpago", unique = true, nullable = false)
	public int getIdtpago() {
		return this.idtpago;
	}

	public void setIdtpago(int idtpago) {
		this.idtpago = idtpago;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idfpago", nullable = false)
	public Fpago getFpago() {
		return this.fpago;
	}

	public void setFpago(Fpago fpago) {
		this.fpago = fpago;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idbcoemisortar")
	public Bancos getBancosByIdbcoemisortar() {
		return this.bancosByIdbcoemisortar;
	}

	public void setBancosByIdbcoemisortar(Bancos bancosByIdbcoemisortar) {
		this.bancosByIdbcoemisortar = bancosByIdbcoemisortar;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idpago", nullable = false)
	public Pagos getPagos() {
		return this.pagos;
	}

	public void setPagos(Pagos pagos) {
		this.pagos = pagos;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idbcoemisor")
	public Bancos getBancosByIdbcoemisor() {
		return this.bancosByIdbcoemisor;
	}

	public void setBancosByIdbcoemisor(Bancos bancosByIdbcoemisor) {
		this.bancosByIdbcoemisor = bancosByIdbcoemisor;
	}

	@Column(name = "valpago", nullable = false, precision = 8, scale = 8)
	public float getValpago() {
		return this.valpago;
	}

	public void setValpago(float valpago) {
		this.valpago = valpago;
	}

	@Column(name = "nrodocumento", length = 30)
	public String getNrodocumento() {
		return this.nrodocumento;
	}

	public void setNrodocumento(String nrodocumento) {
		this.nrodocumento = nrodocumento;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "fcaducidad", length = 13)
	public Date getFcaducidad() {
		return this.fcaducidad;
	}

	public void setFcaducidad(Date fcaducidad) {
		this.fcaducidad = fcaducidad;
	}

	@Column(name = "codseguridad", length = 8)
	public String getCodseguridad() {
		return this.codseguridad;
	}

	public void setCodseguridad(String codseguridad) {
		this.codseguridad = codseguridad;
	}

	@Column(name = "propietario", length = 30)
	public String getPropietario() {
		return this.propietario;
	}

	public void setPropietario(String propietario) {
		this.propietario = propietario;
	}

	@Column(name = "nrocuenta", length = 20)
	public String getNrocuenta() {
		return this.nrocuenta;
	}

	public void setNrocuenta(String nrocuenta) {
		this.nrocuenta = nrocuenta;
	}

	@Column(name = "idestado", nullable = false)
	public int getIdestado() {
		return this.idestado;
	}

	public void setIdestado(int idestado) {
		this.idestado = idestado;
	}

	@Column(name = "idempresa", nullable = false)
	public int getIdempresa() {
		return this.idempresa;
	}

	public void setIdempresa(int idempresa) {
		this.idempresa = idempresa;
	}

	@Column(name = "idusuario", nullable = false)
	public int getIdusuario() {
		return this.idusuario;
	}

	public void setIdusuario(int idusuario) {
		this.idusuario = idusuario;
	}

	@Column(name = "idnexo")
	public Integer getIdnexo() {
		return this.idnexo;
	}

	public void setIdnexo(Integer idnexo) {
		this.idnexo = idnexo;
	}
	
	@Override
	protected Object clone() throws CloneNotSupportedException {
		Tpagos tpagos = (Tpagos) super.clone();
		
		/*tpagos.setFpago((Fpago) tpagos.getFpago().clone());
		tpagos.setBancosByIdbcoemisortar((Bancos)tpagos.getBancosByIdbcoemisortar().clone());
		tpagos.setPagos((Pagos)tpagos.getPagos().clone());
		tpagos.setBancosByIdbcoemisor((Bancos)tpagos.getBancosByIdbcoemisor().clone());*/
		
		return tpagos;
	}

	public Tpagos clonar() throws Exception {
		return (Tpagos)this.clone();
	}
	
}
