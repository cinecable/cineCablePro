package pojo.annotations;

// Generated 09/02/2014 10:20:13 AM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Debitobco generated by hbm2java
 */
@Entity
@Table(name = "debitobco", schema = "public")
public class Debitobco implements java.io.Serializable, Cloneable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -675806293271550648L;
	private int iddebitobco;
	private Bancos bancos;
	private Bancos bancosEmisor;
	//private int idtipodebito;
	private Tipodebito tipodebito;
	private int idtipoidentificacion;
	private int idtipocuenta;
	private String identificacion;
	private Date fcaducidad;
	private String codigoseguridad;
	private String propietario;
	private String nrodebito;
	private Ctacliente ctacliente;
	private int idestado;
	//private Set<?> ctaclientes = new HashSet<Object>(0);

	public Debitobco() {
	}

	public Debitobco(int iddebitobco, Tipodebito tipodebito) {
		this.iddebitobco = iddebitobco;
		this.tipodebito = tipodebito;
	}

	public Debitobco(int iddebitobco, Bancos bancos, Tipodebito tipodebito,
			Date fcaducidad, String codigoseguridad, String propietario,
			Bancos bancosEmisor, String nrodebito, int idtipoidentificacion,
			int idtipocuenta, String identificacion/*, Set<?> ctaclientes*/) {
		this.iddebitobco = iddebitobco;
		this.bancos = bancos;
		this.tipodebito = tipodebito;
		this.fcaducidad = fcaducidad;
		this.codigoseguridad = codigoseguridad;
		this.propietario = propietario;
		this.bancosEmisor = bancosEmisor;
		this.nrodebito = nrodebito;
		this.idtipoidentificacion = idtipoidentificacion;
		this.idtipocuenta = idtipocuenta;
		this.identificacion = identificacion;
		//this.ctaclientes = ctaclientes;
	}

	@Id
	@Column(name = "iddebitobco", unique = true, nullable = false)
	public int getIddebitobco() {
		return this.iddebitobco;
	}

	public void setIddebitobco(int iddebitobco) {
		this.iddebitobco = iddebitobco;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idbanco")
	public Bancos getBancos() {
		return this.bancos;
	}

	public void setBancos(Bancos bancos) {
		this.bancos = bancos;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idtipodebito")
	public Tipodebito getTipodebito() {
		return tipodebito;
	}

	
	public void setTipodebito(Tipodebito tipodebito) {
		this.tipodebito = tipodebito;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idbancotar")
	public Bancos getBancosEmisor() {
		return bancosEmisor;
	}

	public void setBancosEmisor(Bancos bancosEmisor) {
		this.bancosEmisor = bancosEmisor;
	}


	@Temporal(TemporalType.DATE)
	@Column(name = "fcaducidad", length = 13)
	public Date getFcaducidad() {
		return this.fcaducidad;
	}

	public void setFcaducidad(Date fcaducidad) {
		this.fcaducidad = fcaducidad;
	}

	@Column(name = "codigoseguridad", length = 50)
	public String getCodigoseguridad() {
		return this.codigoseguridad;
	}

	public void setCodigoseguridad(String codigoseguridad) {
		this.codigoseguridad = codigoseguridad;
	}

	@Column(name = "propietario", length = 25)
	public String getPropietario() {
		return this.propietario;
	}

	public void setPropietario(String propietario) {
		this.propietario = propietario;
	}

	
	@Column(name = "nrodebito", length = 20)
	public String getNrodebito() {
		return this.nrodebito;
	}

	public void setNrodebito(String nrodebito) {
		this.nrodebito = nrodebito;
	}

	@Column(name = "idtipoidentificacion")
	public int getIdtipoidentificacion() {
		return idtipoidentificacion;
	}

	public void setIdtipoidentificacion(int idtipoidentificacion) {
		this.idtipoidentificacion = idtipoidentificacion;
	}
	
	@Column(name = "idtipocuenta")
	public int getIdtipocuenta() {
		return idtipocuenta;
	}

	public void setIdtipocuenta(int idtipocuenta) {
		this.idtipocuenta = idtipocuenta;
	}
	
	@Column(name = "identificacion")
	public String getIdentificacion() {
		return identificacion;
	}

	public void setIdentificacion(String identificacion) {
		this.identificacion = identificacion;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idcuenta", nullable = false)
	public Ctacliente getCtacliente() {
		return this.ctacliente;
	}

	public void setCtacliente(Ctacliente ctacliente) {
		this.ctacliente = ctacliente;
	}

	@Column(name = "idestado")
	public int getIdestado() {
		return idestado;
	}

	public void setIdestado(int idestado) {
		this.idestado = idestado;
	}

	@Override
	protected Object clone() throws CloneNotSupportedException {
		return super.clone();
	}
	
	public Debitobco clonar() throws Exception {
		return (Debitobco)clone();
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((bancos == null) ? 0 : bancos.getIdbanco());
		result = prime * result
				+ ((codigoseguridad == null) ? 0 : codigoseguridad.hashCode());
		result = prime * result
				+ ((fcaducidad == null) ? 0 : fcaducidad.hashCode());
		result = prime * result
				+ ((bancosEmisor == null) ? 0 : bancosEmisor.getIdbanco());
		result = prime * result
				+ ((ctacliente == null) ? 0 : ctacliente.getIdcuenta());
		result = prime * result + iddebitobco;
		result = prime * result
				+ ((identificacion == null) ? 0 : identificacion.hashCode());
		result = prime * result + idestado;
		result = prime * result + idtipocuenta;
		result = prime * result + ((tipodebito == null) ? 0 : tipodebito.getIdtipodebito());
		result = prime * result + idtipoidentificacion;
		result = prime * result
				+ ((nrodebito == null) ? 0 : nrodebito.hashCode());
		result = prime * result
				+ ((propietario == null) ? 0 : propietario.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Debitobco other = (Debitobco) obj;
		if (bancos == null) {
			if (other.bancos != null)
				return false;
		} else if (bancos.getIdbanco() != other.bancos.getIdbanco())
			return false;
		if (codigoseguridad == null) {
			if (other.codigoseguridad != null)
				return false;
		} else if (!codigoseguridad.equals(other.codigoseguridad))
			return false;
		if (fcaducidad == null) {
			if (other.fcaducidad != null)
				return false;
		} else if (!fcaducidad.equals(other.fcaducidad))
			return false;
		if (bancosEmisor == null) {
			if (other.bancosEmisor != null)
				return false;
		} else if (bancosEmisor.getIdbanco() != other.bancosEmisor.getIdbanco())
			return false;
		if (ctacliente == null) {
			if (other.ctacliente != null)
				return false;
		} else if (ctacliente.getIdcuenta() != other.ctacliente.getIdcuenta())
			return false;
		if (iddebitobco != other.iddebitobco)
			return false;
		if (identificacion == null) {
			if (other.identificacion != null)
				return false;
		} else if (!identificacion.equals(other.identificacion))
			return false;
		if (idestado != other.idestado)
			return false;
		if (idtipocuenta != other.idtipocuenta)
			return false;
		if (tipodebito == null) {
			if (other.tipodebito != null)
				return false;
		} else if (tipodebito.getIdtipodebito() != other.tipodebito.getIdtipodebito())
			return false;
		if (idtipoidentificacion != other.idtipoidentificacion)
			return false;
		if (nrodebito == null) {
			if (other.nrodebito != null)
				return false;
		} else if (!nrodebito.equals(other.nrodebito))
			return false;
		if (propietario == null) {
			if (other.propietario != null)
				return false;
		} else if (!propietario.equals(other.propietario))
			return false;
		return true;
	}

	
	
	
	

}
