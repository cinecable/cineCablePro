package pojo.annotations;

// Generated 09/02/2014 10:20:13 AM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Fpago generated by hbm2java
 */
@Entity
@Table(name = "fpago", schema = "public")
public class Fpago implements java.io.Serializable, Cloneable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -375751528801144166L;
	private int idfpago;
	private String nombre;
	private String abreviado;
	private int idestado;
	private int idempresa;
	private int idusuario;
	private Date fecha;
	//private Set<?> tpagoses = new HashSet<Object>(0);

	public Fpago() {
	}

	public Fpago(int idfpago, String nombre, int idestado, int idempresa,
			int idusuario, Date fecha) {
		this.idfpago = idfpago;
		this.nombre = nombre;
		this.idestado = idestado;
		this.idempresa = idempresa;
		this.idusuario = idusuario;
		this.fecha = fecha;
	}

	public Fpago(int idfpago, String nombre, String abreviado, int idestado,
			int idempresa, int idusuario, Date fecha/*, Set<?> tpagoses*/) {
		this.idfpago = idfpago;
		this.nombre = nombre;
		this.abreviado = abreviado;
		this.idestado = idestado;
		this.idempresa = idempresa;
		this.idusuario = idusuario;
		this.fecha = fecha;
		//this.tpagoses = tpagoses;
	}

	@Id
	@Column(name = "idfpago", unique = true, nullable = false)
	public int getIdfpago() {
		return this.idfpago;
	}

	public void setIdfpago(int idfpago) {
		this.idfpago = idfpago;
	}

	@Column(name = "nombre", nullable = false, length = 20)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "abreviado", length = 6)
	public String getAbreviado() {
		return this.abreviado;
	}

	public void setAbreviado(String abreviado) {
		this.abreviado = abreviado;
	}

	@Column(name = "idestado", nullable = false)
	public int getIdestado() {
		return this.idestado;
	}

	public void setIdestado(int idestado) {
		this.idestado = idestado;
	}

	@Column(name = "idempresa", nullable = false)
	public int getIdempresa() {
		return this.idempresa;
	}

	public void setIdempresa(int idempresa) {
		this.idempresa = idempresa;
	}

	@Column(name = "idusuario", nullable = false)
	public int getIdusuario() {
		return this.idusuario;
	}

	public void setIdusuario(int idusuario) {
		this.idusuario = idusuario;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha", nullable = false, length = 29)
	public Date getFecha() {
		return this.fecha;
	}

	public void setFecha(Date fecha) {
		this.fecha = fecha;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((abreviado == null) ? 0 : abreviado.hashCode());
		result = prime * result + ((fecha == null) ? 0 : fecha.hashCode());
		result = prime * result + idempresa;
		result = prime * result + idestado;
		result = prime * result + idfpago;
		result = prime * result + idusuario;
		result = prime * result + ((nombre == null) ? 0 : nombre.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Fpago other = (Fpago) obj;
		if (abreviado == null) {
			if (other.abreviado != null)
				return false;
		} else if (!abreviado.equals(other.abreviado))
			return false;
		if (fecha == null) {
			if (other.fecha != null)
				return false;
		} else if (!fecha.equals(other.fecha))
			return false;
		if (idempresa != other.idempresa)
			return false;
		if (idestado != other.idestado)
			return false;
		if (idfpago != other.idfpago)
			return false;
		if (idusuario != other.idusuario)
			return false;
		if (nombre == null) {
			if (other.nombre != null)
				return false;
		} else if (!nombre.equals(other.nombre))
			return false;
		return true;
	}
	
	@Override
	protected Object clone() throws CloneNotSupportedException {
		return super.clone();
	}

	/*@OneToMany(fetch = FetchType.LAZY, mappedBy = "fpago")
	public Set<?> getTpagoses() {
		return this.tpagoses;
	}

	public void setTpagoses(Set<?> tpagoses) {
		this.tpagoses = tpagoses;
	}*/

}
