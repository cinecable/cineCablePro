package pojo.annotations;

// Generated 04/03/2014 09:28:30 AM by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

/**
 * Factura generated by hbm2java
 */
@Entity
@Table(name = "factura", schema = "public")
public class Factura implements java.io.Serializable, Cloneable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 4975092804083516897L;
	private int idsecuencia;
	private Empresa empresa;
	private int idgeneracion;
	private String idfactura;
	private String nombre;
	//private String idcliente;
	private String idcinecable;
	private String dircliente;
	private String dircinecable;
	private int idusuario;
	private Date fecha;
	private float valbruto;
	private Float valdescuentos;
	private Float valcreditos;
	private Float valbase;
	private Float valimpuestos;
	private float valtotal;
	private Date fcaducidad;
	private String idautorizacion;
	private String imprenta;
	private int idestado;
	private int idcuenta;
	private Float valpendiente;
	private String ip;
	private Float valorexcedentes;
	private Clientes clientes;
	private Debitobco debitobco;
	
	//Atributos personalizados
	private String textoFactura;

	public Factura() {
	}

	public Factura(int idsecuencia, Empresa empresa, int idgeneracion,
			String nombre, Clientes clientes, String idcinecable,
			String dircliente, String dircinecable, int idusuario, Date fecha,
			float valbruto, float valtotal, Date fcaducidad,
			String idautorizacion, int idestado, int idcuenta) {
		this.idsecuencia = idsecuencia;
		this.empresa = empresa;
		this.idgeneracion = idgeneracion;
		this.nombre = nombre;
		this.clientes = clientes;
		this.idcinecable = idcinecable;
		this.dircliente = dircliente;
		this.dircinecable = dircinecable;
		this.idusuario = idusuario;
		this.fecha = fecha;
		this.valbruto = valbruto;
		this.valtotal = valtotal;
		this.fcaducidad = fcaducidad;
		this.idautorizacion = idautorizacion;
		this.idestado = idestado;
		this.idcuenta = idcuenta;
	}

	public Factura(int idsecuencia, Empresa empresa, int idgeneracion,
			String idfactura, String nombre, Clientes clientes,
			String idcinecable, String dircliente, String dircinecable,
			int idusuario, Date fecha, float valbruto, Float valdescuentos,
			Float valcreditos, Float valbase, Float valimpuestos,
			float valtotal, Date fcaducidad, String idautorizacion,
			String imprenta, int idestado, int idcuenta, Float valpendiente,
			String ip, Float valorexcedentes) {
		this.idsecuencia = idsecuencia;
		this.empresa = empresa;
		this.idgeneracion = idgeneracion;
		this.idfactura = idfactura;
		this.nombre = nombre;
		this.clientes = clientes;
		this.idcinecable = idcinecable;
		this.dircliente = dircliente;
		this.dircinecable = dircinecable;
		this.idusuario = idusuario;
		this.fecha = fecha;
		this.valbruto = valbruto;
		this.valdescuentos = valdescuentos;
		this.valcreditos = valcreditos;
		this.valbase = valbase;
		this.valimpuestos = valimpuestos;
		this.valtotal = valtotal;
		this.fcaducidad = fcaducidad;
		this.idautorizacion = idautorizacion;
		this.imprenta = imprenta;
		this.idestado = idestado;
		this.idcuenta = idcuenta;
		this.valpendiente = valpendiente;
		this.ip = ip;
		this.valorexcedentes = valorexcedentes;
	}

	@Id
	@Column(name = "idsecuencia", unique = true, nullable = false)
	public int getIdsecuencia() {
		return this.idsecuencia;
	}

	public void setIdsecuencia(int idsecuencia) {
		this.idsecuencia = idsecuencia;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idempresa", nullable = false)
	public Empresa getEmpresa() {
		return this.empresa;
	}

	public void setEmpresa(Empresa empresa) {
		this.empresa = empresa;
	}

	@Column(name = "idgeneracion", nullable = false)
	public int getIdgeneracion() {
		return this.idgeneracion;
	}

	public void setIdgeneracion(int idgeneracion) {
		this.idgeneracion = idgeneracion;
	}

	@Column(name = "idfactura", length = 30)
	public String getIdfactura() {
		return this.idfactura;
	}

	public void setIdfactura(String idfactura) {
		this.idfactura = idfactura;
	}

	@Column(name = "nombre", nullable = false, length = 50)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	/*@Column(name = "idcliente", nullable = false, length = 20)
	public String getIdcliente() {
		return this.idcliente;
	}

	public void setIdcliente(String idcliente) {
		this.idcliente = idcliente;
	}*/

	@Column(name = "idcinecable", nullable = false, length = 20)
	public String getIdcinecable() {
		return this.idcinecable;
	}

	public void setIdcinecable(String idcinecable) {
		this.idcinecable = idcinecable;
	}

	@Column(name = "dircliente", nullable = false, length = 100)
	public String getDircliente() {
		return this.dircliente;
	}

	public void setDircliente(String dircliente) {
		this.dircliente = dircliente;
	}

	@Column(name = "dircinecable", nullable = false, length = 100)
	public String getDircinecable() {
		return this.dircinecable;
	}

	public void setDircinecable(String dircinecable) {
		this.dircinecable = dircinecable;
	}

	@Column(name = "idusuario", nullable = false)
	public int getIdusuario() {
		return this.idusuario;
	}

	public void setIdusuario(int idusuario) {
		this.idusuario = idusuario;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha", nullable = false, length = 29)
	public Date getFecha() {
		return this.fecha;
	}

	public void setFecha(Date fecha) {
		this.fecha = fecha;
	}

	@Column(name = "valbruto", nullable = false, precision = 8, scale = 8)
	public float getValbruto() {
		return this.valbruto;
	}

	public void setValbruto(float valbruto) {
		this.valbruto = valbruto;
	}

	@Column(name = "valdescuentos", precision = 8, scale = 8)
	public Float getValdescuentos() {
		return this.valdescuentos;
	}

	public void setValdescuentos(Float valdescuentos) {
		this.valdescuentos = valdescuentos;
	}

	@Column(name = "valcreditos", precision = 8, scale = 8)
	public Float getValcreditos() {
		return this.valcreditos;
	}

	public void setValcreditos(Float valcreditos) {
		this.valcreditos = valcreditos;
	}

	@Column(name = "valbase", precision = 8, scale = 8)
	public Float getValbase() {
		return this.valbase;
	}

	public void setValbase(Float valbase) {
		this.valbase = valbase;
	}

	@Column(name = "valimpuestos", precision = 8, scale = 8)
	public Float getValimpuestos() {
		return this.valimpuestos;
	}

	public void setValimpuestos(Float valimpuestos) {
		this.valimpuestos = valimpuestos;
	}

	@Column(name = "valtotal", nullable = false, precision = 8, scale = 8)
	public float getValtotal() {
		return this.valtotal;
	}

	public void setValtotal(float valtotal) {
		this.valtotal = valtotal;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "fcaducidad", nullable = false, length = 13)
	public Date getFcaducidad() {
		return this.fcaducidad;
	}

	public void setFcaducidad(Date fcaducidad) {
		this.fcaducidad = fcaducidad;
	}

	@Column(name = "idautorizacion", nullable = false, length = 20)
	public String getIdautorizacion() {
		return this.idautorizacion;
	}

	public void setIdautorizacion(String idautorizacion) {
		this.idautorizacion = idautorizacion;
	}

	@Column(name = "imprenta", length = 20)
	public String getImprenta() {
		return this.imprenta;
	}

	public void setImprenta(String imprenta) {
		this.imprenta = imprenta;
	}

	@Column(name = "idestado", nullable = false)
	public int getIdestado() {
		return this.idestado;
	}

	public void setIdestado(int idestado) {
		this.idestado = idestado;
	}

	@Column(name = "idcuenta", nullable = false)
	public int getIdcuenta() {
		return this.idcuenta;
	}

	public void setIdcuenta(int idcuenta) {
		this.idcuenta = idcuenta;
	}

	@Column(name = "valpendiente", precision = 8, scale = 8)
	public Float getValpendiente() {
		return this.valpendiente;
	}

	public void setValpendiente(Float valpendiente) {
		this.valpendiente = valpendiente;
	}

	@Column(name = "ip", length = 100)
	public String getIp() {
		return this.ip;
	}

	public void setIp(String ip) {
		this.ip = ip;
	}

	@Column(name = "valorexcedentes", precision = 8, scale = 8)
	public Float getValorexcedentes() {
		return this.valorexcedentes;
	}

	public void setValorexcedentes(Float valorexcedentes) {
		this.valorexcedentes = valorexcedentes;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idcliente", nullable = false)
	public Clientes getClientes() {
		return this.clientes;
	}

	public void setClientes(Clientes clientes) {
		this.clientes = clientes;
	}

	@Transient
	public String getTextoFactura() {
		String numero = "";
		String fecha = "";
		String valor = "";
		
		if(this.idfactura != null && this.idfactura.trim().length() > 0){
			numero = this.idfactura;
		}else{
			numero = "sin número";
		}
		
		if(this.fecha != null){
			fecha =  new SimpleDateFormat("dd/MM/yyyy").format(this.fecha);
		}else{
			fecha = "sin fecha";
		}
		
		if(this.valtotal> 0){
			BigDecimal bd = new BigDecimal(valtotal);
			valor = bd.setScale(2, BigDecimal.ROUND_HALF_UP).toString();
		}else{
			valor = "sin valor";
		}
		
		this.textoFactura = "#" + numero + " " + fecha + " $" + valor;
		
		return textoFactura;
	}

	public void setTextoFactura(String textoFactura) {
		this.textoFactura = textoFactura;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "iddebitobco", nullable = false)
	public Debitobco getDebitobco() {
		return debitobco;
	}

	public void setDebitobco(Debitobco debitobco) {
		this.debitobco = debitobco;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((dircinecable == null) ? 0 : dircinecable.hashCode());
		result = prime * result
				+ ((dircliente == null) ? 0 : dircliente.hashCode());
		result = prime * result + ((empresa == null) ? 0 : empresa.getIdempresa());
		result = prime * result
				+ ((fcaducidad == null) ? 0 : fcaducidad.hashCode());
		result = prime * result + ((fecha == null) ? 0 : fecha.hashCode());
		result = prime * result
				+ ((idautorizacion == null) ? 0 : idautorizacion.hashCode());
		result = prime * result
				+ ((idcinecable == null) ? 0 : idcinecable.hashCode());
		result = prime * result + ((clientes == null) ? 0 : clientes.getIdcliente().hashCode());
		result = prime * result + idcuenta;
		result = prime * result + idestado;
		result = prime * result
				+ ((idfactura == null) ? 0 : idfactura.hashCode());
		result = prime * result + idgeneracion;
		result = prime * result + idsecuencia;
		result = prime * result + idusuario;
		result = prime * result
				+ ((imprenta == null) ? 0 : imprenta.hashCode());
		result = prime * result + ((ip == null) ? 0 : ip.hashCode());
		result = prime * result + ((nombre == null) ? 0 : nombre.hashCode());
		result = prime * result + ((valbase == null) ? 0 : valbase.hashCode());
		result = prime * result + Float.floatToIntBits(valbruto);
		result = prime * result
				+ ((valcreditos == null) ? 0 : valcreditos.hashCode());
		result = prime * result
				+ ((valdescuentos == null) ? 0 : valdescuentos.hashCode());
		result = prime * result
				+ ((valimpuestos == null) ? 0 : valimpuestos.hashCode());
		result = prime * result
				+ ((valorexcedentes == null) ? 0 : valorexcedentes.hashCode());
		result = prime * result
				+ ((valpendiente == null) ? 0 : valpendiente.hashCode());
		result = prime * result + Float.floatToIntBits(valtotal);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Factura other = (Factura) obj;
		if (dircinecable == null) {
			if (other.dircinecable != null)
				return false;
		} else if (!dircinecable.equals(other.dircinecable))
			return false;
		if (dircliente == null) {
			if (other.dircliente != null)
				return false;
		} else if (!dircliente.equals(other.dircliente))
			return false;
		if (empresa == null) {
			if (other.empresa != null)
				return false;
		} else if (empresa.getIdempresa() != other.empresa.getIdempresa())
			return false;
		if (fcaducidad == null) {
			if (other.fcaducidad != null)
				return false;
		} else if (!fcaducidad.equals(other.fcaducidad))
			return false;
		if (fecha == null) {
			if (other.fecha != null)
				return false;
		} else if (!fecha.equals(other.fecha))
			return false;
		if (idautorizacion == null) {
			if (other.idautorizacion != null)
				return false;
		} else if (!idautorizacion.equals(other.idautorizacion))
			return false;
		if (idcinecable == null) {
			if (other.idcinecable != null)
				return false;
		} else if (!idcinecable.equals(other.idcinecable))
			return false;
		if (clientes == null) {
			if (other.clientes != null)
				return false;
		} else if (!clientes.getIdcliente().equals(other.clientes.getIdcliente()))
			return false;
		if (idcuenta != other.idcuenta)
			return false;
		if (idestado != other.idestado)
			return false;
		if (idfactura == null) {
			if (other.idfactura != null)
				return false;
		} else if (!idfactura.equals(other.idfactura))
			return false;
		if (idgeneracion != other.idgeneracion)
			return false;
		if (idsecuencia != other.idsecuencia)
			return false;
		if (idusuario != other.idusuario)
			return false;
		if (imprenta == null) {
			if (other.imprenta != null)
				return false;
		} else if (!imprenta.equals(other.imprenta))
			return false;
		if (ip == null) {
			if (other.ip != null)
				return false;
		} else if (!ip.equals(other.ip))
			return false;
		if (nombre == null) {
			if (other.nombre != null)
				return false;
		} else if (!nombre.equals(other.nombre))
			return false;
		if (valbase == null) {
			if (other.valbase != null)
				return false;
		} else if (!valbase.equals(other.valbase))
			return false;
		if (Float.floatToIntBits(valbruto) != Float
				.floatToIntBits(other.valbruto))
			return false;
		if (valcreditos == null) {
			if (other.valcreditos != null)
				return false;
		} else if (!valcreditos.equals(other.valcreditos))
			return false;
		if (valdescuentos == null) {
			if (other.valdescuentos != null)
				return false;
		} else if (!valdescuentos.equals(other.valdescuentos))
			return false;
		if (valimpuestos == null) {
			if (other.valimpuestos != null)
				return false;
		} else if (!valimpuestos.equals(other.valimpuestos))
			return false;
		if (valorexcedentes == null) {
			if (other.valorexcedentes != null)
				return false;
		} else if (!valorexcedentes.equals(other.valorexcedentes))
			return false;
		if (valpendiente == null) {
			if (other.valpendiente != null)
				return false;
		} else if (!valpendiente.equals(other.valpendiente))
			return false;
		if (Float.floatToIntBits(valtotal) != Float
				.floatToIntBits(other.valtotal))
			return false;
		return true;
	}

	@Override
	protected Object clone() throws CloneNotSupportedException {
		Factura factura = (Factura) super.clone();
		
		/*if(factura.getEmpresa() != null){
			factura.setEmpresa((Empresa)factura.getEmpresa().clone());
		}*/
		
		return factura;
	}
	
	public Factura clonar() throws Exception {
		return (Factura) this.clone();
	}

}
