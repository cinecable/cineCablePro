package pojo.annotations;

// Generated 09-feb-2014 10:19:46 by Hibernate Tools 3.4.0.CR1


import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;


/**
 * Direccion generated by hbm2java
 */
@Entity
@Table(name = "direccion", schema = "public")
public class Direccion implements java.io.Serializable, Cloneable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private int iddireccion;
	private Edificio edificio;
	private Referenciadir referenciadir;
	private Ctacliente ctacliente;
	private Calleprincipal calleprincipal;
	private Tiposector tiposector;
	private Callesecundaria callesecundaria;
	private Ubicacion ubicacion;
	private Nodos nodos;
	private Sector sector;
	private Integer numero;
	private Integer piso;
	private Integer departamento;
	private String idtab;
	private String correspondencia;
	private String vineta;
	private String poste;
	private String solar;
	
	public Direccion() {
	}

	public Direccion(int iddireccion, Ctacliente ctacliente,
			Tiposector tiposector, Nodos nodos, Sector sector,
			String correspondencia, String vineta) {
		this.iddireccion = iddireccion;
		this.ctacliente = ctacliente;
		this.tiposector = tiposector;
		this.nodos = nodos;
		this.sector = sector;
		this.correspondencia = correspondencia;
		this.vineta = vineta;
	}

	public Direccion(int iddireccion, Edificio edificio, Referenciadir referenciadir,Ctacliente ctacliente,
			Calleprincipal calleprincipal, Tiposector tiposector,
			Callesecundaria callesecundaria, Ubicacion ubicacion, Nodos nodos,
			Sector sector, Integer numero, Integer piso, Integer departamento,
			String idtab, String correspondencia, String vineta, String poste,
			String solar) {
		this.iddireccion = iddireccion;
		this.edificio = edificio;
		this.referenciadir = referenciadir;
		this.ctacliente = ctacliente;
		this.calleprincipal = calleprincipal;
		this.tiposector = tiposector;
		this.callesecundaria = callesecundaria;
		this.ubicacion = ubicacion;
		this.nodos = nodos;
		this.sector = sector;
		this.numero = numero;
		this.piso = piso;
		this.departamento = departamento;
		this.idtab = idtab;
		this.correspondencia = correspondencia;
		this.vineta = vineta;
		this.poste = poste;
		this.solar = solar;
	}

	@Id
	@Column(name = "iddireccion", unique = true, nullable = false)
	public int getIddireccion() {
		return this.iddireccion;
	}

	public void setIddireccion(int iddireccion) {
		this.iddireccion = iddireccion;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idedificio")
	public Edificio getEdificio() {
		return this.edificio;
	}

	public void setEdificio(Edificio edificio) {
		this.edificio = edificio;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idcuenta", nullable = false)
	public Ctacliente getCtacliente() {
		return this.ctacliente;
	}

	public void setCtacliente(Ctacliente ctacliente) {
		this.ctacliente = ctacliente;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idcalleprincipal")
	public Calleprincipal getCalleprincipal() {
		return this.calleprincipal;
	}

	public void setCalleprincipal(Calleprincipal calleprincipal) {
		this.calleprincipal = calleprincipal;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idtiposector", nullable = false)
	public Tiposector getTiposector() {
		return this.tiposector;
	}

	public void setTiposector(Tiposector tiposector) {
		this.tiposector = tiposector;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idcallesecundaria")
	public Callesecundaria getCallesecundaria() {
		return this.callesecundaria;
	}

	public void setCallesecundaria(Callesecundaria callesecundaria) {
		this.callesecundaria = callesecundaria;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idubicacion")
	public Ubicacion getUbicacion() {
		return this.ubicacion;
	}

	public void setUbicacion(Ubicacion ubicacion) {
		this.ubicacion = ubicacion;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idnodo", nullable = false)
	public Nodos getNodos() {
		return this.nodos;
	}

	public void setNodos(Nodos nodos) {
		this.nodos = nodos;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idsector", nullable = false)
	public Sector getSector() {
		return this.sector;
	}

	public void setSector(Sector sector) {
		this.sector = sector;
	}

	@Column(name = "numero")
	public Integer getNumero() {
		return this.numero;
	}

	public void setNumero(Integer numero) {
		this.numero = numero;
	}

	@Column(name = "piso")
	public Integer getPiso() {
		return this.piso;
	}

	public void setPiso(Integer piso) {
		this.piso = piso;
	}

	@Column(name = "departamento")
	public Integer getDepartamento() {
		return this.departamento;
	}

	public void setDepartamento(Integer departamento) {
		this.departamento = departamento;
	}

	@Column(name = "idtab")
	public String getIdtab() {
		return this.idtab;
	}

	public void setIdtab(String idtab) {
		this.idtab = idtab;
	}

	@Column(name = "correspondencia", nullable = false, length = 1)
	public String getCorrespondencia() {
		return this.correspondencia;
	}

	public void setCorrespondencia(String correspondencia) {
		this.correspondencia = correspondencia;
	}

	@Column(name = "vineta", nullable = false, length = 12)
	public String getVineta() {
		return this.vineta;
	}

	public void setVineta(String vineta) {
		this.vineta = vineta;
	}

	@Column(name = "poste", length = 6)
	public String getPoste() {
		return this.poste;
	}

	public void setPoste(String poste) {
		this.poste = poste;
	}

	@Column(name = "solar", length = 10)
	public String getSolar() {
		return this.solar;
	}

	public void setSolar(String solar) {
		this.solar = solar;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idreferencia")
	public Referenciadir getReferenciadir() {
		return referenciadir;
	}

	public void setReferenciadir(Referenciadir referenciadir) {
		this.referenciadir = referenciadir;
	}

	@Override
	protected Object clone() throws CloneNotSupportedException {
		Direccion direccion = (Direccion) super.clone();
		
		if(direccion.getCalleprincipal() != null){
			direccion.setCalleprincipal((Calleprincipal)direccion.getCalleprincipal().clone());
		}
		
		if(direccion.getCallesecundaria() != null){
			direccion.setCallesecundaria((Callesecundaria)direccion.getCallesecundaria().clone());
		}
		
		if(direccion.getCtacliente() != null){
			direccion.setCtacliente((Ctacliente)direccion.getCtacliente().clone());
		}
		
		if(direccion.getEdificio() != null){
			direccion.setEdificio((Edificio)direccion.getEdificio().clone());
		}
		
		if(direccion.getNodos() != null){
			direccion.setNodos((Nodos)direccion.getNodos().clone());
		}
		
		if(direccion.getReferenciadir() != null){
			direccion.setReferenciadir((Referenciadir)direccion.getReferenciadir().clone());
		}
		
		if(direccion.getSector() != null){
			direccion.setSector((Sector)direccion.getSector().clone());
		}
		
		if(direccion.getTiposector() != null){
			direccion.setTiposector((Tiposector)direccion.getTiposector().clone());
		}
		
		if(direccion.getUbicacion() != null){
			direccion.setUbicacion((Ubicacion)direccion.getUbicacion().clone());
		}
		
		return direccion;
	}
	
	public Direccion clonar() throws Exception {
		return (Direccion)this.clone();
	}

}
