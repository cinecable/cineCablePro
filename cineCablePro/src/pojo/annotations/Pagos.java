package pojo.annotations;

// Generated 09/02/2014 10:20:13 AM by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

/**
 * Pagos generated by hbm2java
 */
@Entity
@Table(name = "pagos", schema = "public")
public class Pagos implements java.io.Serializable, Cloneable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 7251478412108960617L;
	private int idpago;
	private Estado estado;
	private Usuario usuario;
	private Empresa empresa;
	private String idfactura;
	private int idgeneracion;
	private float valtotal;
	private Date fecha;
	private String ip;
	private int idcuenta;
	//private Set<?> tpagoses = new HashSet<Object>(0);
	
	//Atributos Personalizados
	private String textoPago;

	public Pagos() {
	}

	public Pagos(int idpago, Estado estado, Usuario usuario, Empresa empresa,
			int idgeneracion, float valtotal, Date fecha, int idcuenta) {
		this.idpago = idpago;
		this.estado = estado;
		this.usuario = usuario;
		this.empresa = empresa;
		this.idgeneracion = idgeneracion;
		this.valtotal = valtotal;
		this.fecha = fecha;
		this.idcuenta = idcuenta;
	}

	public Pagos(int idpago, Estado estado, Usuario usuario, Empresa empresa,
			String idfactura, int idgeneracion, float valtotal, Date fecha,
			String ip, int idcuenta/*, Set<?> tpagoses*/) {
		this.idpago = idpago;
		this.estado = estado;
		this.usuario = usuario;
		this.empresa = empresa;
		this.idfactura = idfactura;
		this.idgeneracion = idgeneracion;
		this.valtotal = valtotal;
		this.fecha = fecha;
		this.ip = ip;
		this.idcuenta = idcuenta;
		//this.tpagoses = tpagoses;
	}

	@Id
	@Column(name = "idpago", unique = true, nullable = false)
	public int getIdpago() {
		return this.idpago;
	}

	public void setIdpago(int idpago) {
		this.idpago = idpago;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idestado", nullable = false)
	public Estado getEstado() {
		return this.estado;
	}

	public void setEstado(Estado estado) {
		this.estado = estado;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idusuario", nullable = false)
	public Usuario getUsuario() {
		return this.usuario;
	}

	public void setUsuario(Usuario usuario) {
		this.usuario = usuario;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idempresa", nullable = false)
	public Empresa getEmpresa() {
		return this.empresa;
	}

	public void setEmpresa(Empresa empresa) {
		this.empresa = empresa;
	}

	@Column(name = "idfactura", length = 20)
	public String getIdfactura() {
		return this.idfactura;
	}

	public void setIdfactura(String idfactura) {
		this.idfactura = idfactura;
	}

	@Column(name = "idgeneracion", nullable = false)
	public int getIdgeneracion() {
		return this.idgeneracion;
	}

	public void setIdgeneracion(int idgeneracion) {
		this.idgeneracion = idgeneracion;
	}

	@Column(name = "valtotal", nullable = false, precision = 8, scale = 8)
	public float getValtotal() {
		return this.valtotal;
	}

	public void setValtotal(float valtotal) {
		this.valtotal = valtotal;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha", nullable = false, length = 29)
	public Date getFecha() {
		return this.fecha;
	}

	public void setFecha(Date fecha) {
		this.fecha = fecha;
	}

	@Column(name = "ip", length = 100)
	public String getIp() {
		return this.ip;
	}

	public void setIp(String ip) {
		this.ip = ip;
	}
	
	@Column(name = "idcuenta", nullable = false)
	public int getIdcuenta() {
		return this.idcuenta;
	}

	public void setIdcuenta(int idcuenta) {
		this.idcuenta = idcuenta;
	}
	
	@Transient
	public String getTextoPago() {
		String numero = "";
		String fecha = "";
		String valor = "";
		
		if(this.idfactura != null && this.idfactura.trim().length() > 0){
			numero = this.idfactura;
		}else{
			numero = "sin número";
		}
		
		if(this.fecha != null){
			fecha =  new SimpleDateFormat("dd/MM/yyyy").format(this.fecha);
		}else{
			fecha = "sin fecha";
		}
		
		if(this.valtotal > 0){
			BigDecimal bd = new BigDecimal(valtotal);
			valor = bd.setScale(2, BigDecimal.ROUND_HALF_UP).toString();
		}else{
			valor = "sin valor";
		}
		
		this.textoPago = "#" + numero + " " + fecha + " $" + valor;
		
		return textoPago;
	}

	public void setTextoPago(String textoPago) {
		this.textoPago = textoPago;
	}

	@Override
	protected Object clone() throws CloneNotSupportedException {
		return super.clone();
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((empresa == null) ? 0 : empresa.getIdempresa());
		result = prime * result + ((estado == null) ? 0 : estado.getIdestado());
		result = prime * result + ((fecha == null) ? 0 : fecha.hashCode());
		result = prime * result + idcuenta;
		result = prime * result
				+ ((idfactura == null) ? 0 : idfactura.hashCode());
		result = prime * result + idgeneracion;
		result = prime * result + idpago;
		result = prime * result + ((ip == null) ? 0 : ip.hashCode());
		result = prime * result + ((usuario == null) ? 0 : usuario.getIdusuario());
		result = prime * result + Float.floatToIntBits(valtotal);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Pagos other = (Pagos) obj;
		if (empresa == null) {
			if (other.empresa != null)
				return false;
		} else if (empresa.getIdempresa() != other.empresa.getIdempresa())
			return false;
		if (estado == null) {
			if (other.estado != null)
				return false;
		} else if (estado.getIdestado() != other.estado.getIdestado())
			return false;
		if (fecha == null) {
			if (other.fecha != null)
				return false;
		} else if (!fecha.equals(other.fecha))
			return false;
		if (idcuenta != other.idcuenta)
			return false;
		if (idfactura == null) {
			if (other.idfactura != null)
				return false;
		} else if (!idfactura.equals(other.idfactura))
			return false;
		if (idgeneracion != other.idgeneracion)
			return false;
		if (idpago != other.idpago)
			return false;
		if (ip == null) {
			if (other.ip != null)
				return false;
		} else if (!ip.equals(other.ip))
			return false;
		if (usuario == null) {
			if (other.usuario != null)
				return false;
		} else if (usuario.getIdusuario() != other.usuario.getIdusuario())
			return false;
		if (Float.floatToIntBits(valtotal) != Float
				.floatToIntBits(other.valtotal))
			return false;
		return true;
	}

	/*@OneToMany(fetch = FetchType.LAZY, mappedBy = "pagos")
	public Set<?> getTpagoses() {
		return this.tpagoses;
	}

	public void setTpagoses(Set<?> tpagoses) {
		this.tpagoses = tpagoses;
	}*/
	
	

}
